<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Помощь в работе с программой

1. Задать точки для многоугольника.
	Чтобы задать новую точку для многоугольника, необходимо в колонке справа выбрать соответствующую вкладку - "точки окна" или "точки фигуры".
	После этого, в поля ввода координат ввести координаты, либо кликнуть по нужному месту мышью (в этом случае координаты места клика будут автоматически помещены в эти поля ввода, а сама точка на холсте окрасится в синий цвет).
	После того, как координаты введены, нажмите кнопку "Добавить". Точка с заданными координатами добавится в список и отобразится на холсте.
	Таким образом необходимо задать ещё несколько точек, чтобы получился многоугольник (минимум 3 точки).

2. Редактировать точки многоугольника.
	Чтобы изменить какую-либо точку многоугольника, необходимо в колонке справа выбрать нужную вкладку - "точки окна" или "точки фигуры".
	После чего выбрать щелчком мышь точку в списке, которую мы хотим изменить.
	После того, как точка была выбрана, в полях ввода координат автоматически появляются её текущие координаты.
	Выберите новую точку, которая заменит текущую, путём ввода координат вручную, или при помощи клика мыши в необходимое место (при этом координаты точки клика занесутся автоматически, а выбранная точка окрасится синим цветом).
	После того, как новая точка была выбрана, нажмите кнопку "Сохранить". На место старой точки занеслись координаты новой точки и изменения отобразяться на холсте.

3. Удаление точек многоугольника.
	Чтобы удалить какую-либо точку многоугольнка, необходимо в колонке справа выбрать нужную вкладку - "точки окна" или "точки фигуры".
	После этого, выберите точку в списке, которую хотите далить.
	Нажмите кнупку "Удалить". При этом из списка точек многоугольника удалится выбранная точка.

4. Запуск демонстрационной анимации.
	После того, как все точки отсекающего окна и отсекаемого многоугольника настроены, нажмите кнопку "Старт" в правом нижнем углу окна приложения.
	Нарисованная фигура начнёт двигаться в случаёном направлении и отражаться от стенок. При этом когда фигура будет входить внутрь отсекающего окна, контур видимой части будет отображаться чёрным чветом, а контур не видимой - светло-серым.

5. Остановка демонстрационной анимации.
	Чтобы остановить демонстрационную анимацию, нажмите на кнопку "Стоп" в правом нижнем углу окна приложения.

Примечания:
	1. Для корректной работы алгоритма необходимо задавать точки отсекающего окна по часовой стрелке.
	2. Координаты точек вводятся в привычной форме, нулевая точка находится в центре холста.

Авторы:
	}{@S@NOB О. А. 	студент группы	КТбо3-2
	(с) Таганрог, 2019
	ИКТИБ ИТА ЮФУ, каф. САИТ</value>
  </data>
</root>